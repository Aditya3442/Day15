import java.util.* ;
import java.io.*; 
public class Solution {
    public static int minEnergy(int n,int[] heights,int[] dp){
        if(n==0)
           return 0;
        if(dp[n]!=0)
            return dp[n];
        int l=minEnergy(n-1,heights,dp)+Math.abs(heights[n]-heights[n-1]);

        int r=Integer.MAX_VALUE;
        if(n>1){
            r=minEnergy(n-2,heights,dp)+Math.abs(heights[n]-heights[n-2]);
        }
        
        return dp[n]=Math.min(l,r);
        }
    public static int frogJump(int n, int heights[]) {

        // Write your code here..
        int dp[]=new int[n];
        return minEnergy(n-1,heights,dp);
    }

}
